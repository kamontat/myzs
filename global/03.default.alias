#!/usr/bin/env bash
# shellcheck disable=SC1090,SC2015

# maintain: Kamontat Chantrachirathumrong
# version:  1.1.0
# since:    26/03/2018

# new key
alias c='clear'
alias l='ls'
alias s='source'
alias srm='sudo rm -rf'
alias rmf='rm -rf'
alias la='ls --almost-all --no-group --human-readable --sort=time --format=verbose --time-style="+%d/%m/%Y-%H:%M:%S"'
alias history='fc -El 1'

# git alias
if $MYZS_USE_GIT; then
	_myzs_if_command_exist "hub" &&
		alias git='hub' &&
		_myzs_print_debug_tofile "default" "alias" "git => hub" ||
		_myzs_print_warning_tofile "default" "alias" "hub not exist!"

	alias g='git'
	alias gi='git init'
	alias gs='git status'
	alias gd='git diff'
	alias ga='git add'
	alias gc='git commit'
	alias gcm='gc -m'
	alias gcm-sign='gc -S -m'
	alias gt='git tag'
	alias gta='git tag -a'
	alias gt-sign='git tag -s'
	alias gco='git checkout'
	alias gcod='git checkout dev'
	alias gcom='git checkout master'

	# git branch
	alias gb='git branch'
	alias gba='git branch -a'
	alias gbD='git branch -D'
	alias gbm='git branch --merged'
	alias gbnm='git branch --no-merged'
	alias gbr='git fetch --all --prune' # remove remote branch, If not exist
	alias gp='git push'
	alias gP='git pull'

	# git log
	alias gl='git log --graph'          # log with graph and format in git config
	alias gl-sign='gl --show-signature' # log with show sign information
	alias gla='gl --all'                # log all branch and commit
	alias glo='gl --oneline'            # log with oneline format
	alias glao='gla --oneline'          # log all in oneline format
	alias glss='gl --stat --summary'    # log with stat and summary
fi

# gitmoji
if $MYZS_USE_GITMOJI && _myzs_if_command_exist "gitmoji"; then
	_myzs_print_debug_tofile "default" "alias" "gj => gitmoji"
	alias gj='gitmoji'
	alias gji='git init; gj -i'
	alias gj_remove='gj --remove'
	alias gjc='gj --commit'
	alias gj_list='gj --list'
	alias gj_update='gj --update'
elif $MYZS_USE_GITMOJI && ! _myzs_if_command_exist "gitmoji"; then
	_myzs_print_warning_tofile "default" "alias" "gitmoji not exist!"
fi

if $MYZS_USE_GITGO && _myzs_if_command_exist "gitgo"; then
	_myzs_print_debug_tofile "default" "alias" "gg => gitgo"
	alias gg=gitgo
elif $MYZS_USE_GITGO && ! _myzs_if_command_exist "gitgo"; then
	_myzs_print_warning_tofile "default" "alias" "gitgo not exist!"
fi

# vim
if _myzs_if_command_exist "nvim"; then
	_myzs_print_debug_tofile "default" "alias" "v,vi,vim => nvim"
	_myzs_print_debug_tofile "default" "alias" "vis => sudo nvim"
	_myzs_print_debug_tofile "default" "alias" "svim => sudo nvim"
	alias v='nvim'
	alias vi='nvim'
	alias vim='nvim'
	alias vis='sudo nvim'
	alias svim='sudo nvim'
else
	_myzs_print_debug_tofile "default" "alias" "v,vi => vim"
	_myzs_print_debug_tofile "default" "alias" "vis => sudo vim"
	_myzs_print_debug_tofile "default" "alias" "svim => sudo vim"
	alias v='vim'
	alias vi='vim'
	alias vis='sudo vim'
	alias svim='sudo vim'
fi

alias restart-zsh='exec zsh'
alias restart-bash='exec bash'

if grep -q "zsh" <<<"$SHELL"; then
	_myzs_print_debug_tofile "default" "alias" "restart-shell => restart-zsh"
	alias restart-shell='restart-zsh'
elif grep -q "bash" <<<"$SHELL"; then
	_myzs_print_debug_tofile "default" "alias" "restart-shell => restart-bash"
	alias restart-shell='restart-bash'
else
	_myzs_print_warning_tofile "default" "shell" "none"
fi

# beta application
if [[ "$MYZS_USE_EDITOR" == "code" ]]; then
	_myzs_print_debug_tofile "default" "editor" "code"
	_myzs_print_debug_tofile "default" "alias" "newcode => code --new-window"
	_myzs_print_debug_tofile "default" "alias" "ccode => code --reuse-window"

	! _myzs_if_command_exist "code" && alias code='code-insiders' &&
		_myzs_print_debug_tofile "default" "alias" "code => code-insiders"

	alias newcode='code --new-window'
	alias ccode='code --reuse-window'
elif [[ "$MYZS_USE_EDITOR" == "atom" ]]; then
	_myzs_print_debug_tofile "default" "editor" "atom"
	! _myzs_if_command_exist "atom" && alias atom='atom-beta' &&
		_myzs_print_debug_tofile "default" "alias" "atom => atom-beta"
else
	_myzs_print_warning_tofile "default" "editor" "none"
fi
